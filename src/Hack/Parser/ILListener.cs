//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\IL.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ILParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
public interface IILListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ILParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] ILParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ILParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] ILParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pushLocal</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPushLocal([NotNull] ILParser.PushLocalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pushLocal</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPushLocal([NotNull] ILParser.PushLocalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pushArgument</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPushArgument([NotNull] ILParser.PushArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pushArgument</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPushArgument([NotNull] ILParser.PushArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pushThis</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPushThis([NotNull] ILParser.PushThisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pushThis</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPushThis([NotNull] ILParser.PushThisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pushThat</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPushThat([NotNull] ILParser.PushThatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pushThat</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPushThat([NotNull] ILParser.PushThatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pushPointer</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPushPointer([NotNull] ILParser.PushPointerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pushPointer</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPushPointer([NotNull] ILParser.PushPointerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pushTemp</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPushTemp([NotNull] ILParser.PushTempContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pushTemp</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPushTemp([NotNull] ILParser.PushTempContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pushConstant</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPushConstant([NotNull] ILParser.PushConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pushConstant</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPushConstant([NotNull] ILParser.PushConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pushStatic</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPushStatic([NotNull] ILParser.PushStaticContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pushStatic</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPushStatic([NotNull] ILParser.PushStaticContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>popLocal</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopLocal([NotNull] ILParser.PopLocalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>popLocal</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopLocal([NotNull] ILParser.PopLocalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>popArgument</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopArgument([NotNull] ILParser.PopArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>popArgument</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopArgument([NotNull] ILParser.PopArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>popThis</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopThis([NotNull] ILParser.PopThisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>popThis</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopThis([NotNull] ILParser.PopThisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>popThat</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopThat([NotNull] ILParser.PopThatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>popThat</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopThat([NotNull] ILParser.PopThatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>popPointer</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopPointer([NotNull] ILParser.PopPointerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>popPointer</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopPointer([NotNull] ILParser.PopPointerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>popTemp</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopTemp([NotNull] ILParser.PopTempContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>popTemp</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopTemp([NotNull] ILParser.PopTempContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>popConstant</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopConstant([NotNull] ILParser.PopConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>popConstant</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopConstant([NotNull] ILParser.PopConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>popStatic</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopStatic([NotNull] ILParser.PopStaticContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>popStatic</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopStatic([NotNull] ILParser.PopStaticContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd([NotNull] ILParser.AddContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd([NotNull] ILParser.AddContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sub</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSub([NotNull] ILParser.SubContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sub</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSub([NotNull] ILParser.SubContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>neg</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNeg([NotNull] ILParser.NegContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>neg</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNeg([NotNull] ILParser.NegContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>eq</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEq([NotNull] ILParser.EqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>eq</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEq([NotNull] ILParser.EqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>gt</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGt([NotNull] ILParser.GtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>gt</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGt([NotNull] ILParser.GtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lt</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLt([NotNull] ILParser.LtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lt</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLt([NotNull] ILParser.LtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>and</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd([NotNull] ILParser.AndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>and</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd([NotNull] ILParser.AndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>or</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr([NotNull] ILParser.OrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>or</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr([NotNull] ILParser.OrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot([NotNull] ILParser.NotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="ILParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot([NotNull] ILParser.NotContext context);
}
